[tox]
envlist = init,lint,type,style,py36,py37,cov-report
; ,docs


[testenv]
usedevelop=True
install_command=python -m pip install {opts} {packages}
setenv =
    COVERAGE_FILE = .coverage.{envname}
    ENVIRONMENT = testing
    AWS_ACCESS_KEY_ID=x
    AWS_SECRET_ACCESS_KEY=x
    AWS_SESSION_TOKEN=x
    AWS_SECURITY_TOKEN=x
whitelist_externals = bash
commands =
    bash -c "coverage run -m unittest discover tests > reports/tests.{envname}.txt 2>&1"
deps =
    faker
    moto
    coverage
    sure


[testenv:init]
skip_install=True
setenv =
    COVERAGE_FILE = .coverage
deps =
    coverage
commands =
    coverage erase


[testenv:lint]
usedevelop=True
whitelist_externals = bash
commands =
    bash -c "pylint password_organizer tests > reports/pylint.txt 2>&1"
deps =
    faker
    pylint
    moto
    sure


[testenv:type]
usedevelop=True
whitelist_externals = bash
commands =
    bash -c "mypy password_organizer > reports/mypy.txt 2>&1"
deps =
    mypy


[testenv:style]
skip_install=True
whitelist_externals = bash
commands =
    bash -c "flake8 **/*.py > reports/flake8.txt 2>&1"
deps =
    flake8


[testenv:cov-report]
skip_install=True
setenv =
    COVERAGE_FILE = .coverage
deps = coverage
commands =
    coverage combine
    coverage xml -o reports/coverage.report.xml


; [testenv:docs]
; skip_install=True
; deps =
;     sphinx
;     recommonmark
;     sphinx_rtd_theme
; commands = make -C docs html
; whitelist_externals =
;     make


[coverage:run]
source=password_organizer


[flake8]
max-line-length=100
exclude =
    __init__.py,
    setup.py,
    .git,
    .tox,
    .pytest_cache,
    __pycache__,
    docs/source/conf.py,
    build,
    dist,
    reports
